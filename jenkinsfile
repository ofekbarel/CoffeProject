pipeline {
    agent {
        kubernetes{
            yaml '''
            apiVersion: v1
            Kind: Pod
            spec:
              containers:
              - name: maven
                image: maven:alpine
                command:
                - cat 
                tty: true
              - name: postgres
                image: postgres:14
                env:
                - name: POSTGRES_USER
                  value: "postgres"
                - name: POSTGRES_PASSWORD
                  value: "postgres"
                - name: POSTGRES_DB
                  value: "test"
                - name: HOST
                  value: "localhost"
              - name: ez-docker-helm-build
                image: ezezeasy/ez-docker-helm-build:1.41
                imagePullPolicy: Always
                securityContext:
                  privileged: true
    
            '''
        }
    }


    environment{
        DOCKER_IMAGE = "ofekbarel11/coffeproject"

    }



    stages{
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }



        stage('maven version'){
            steps{
                container('maven'){
                    sh 'mvn -version'
                }
            }
        }





        stage('Build and Push Docker Image') {
            when {
                branch 'main'
            }
            steps {
                container('ez-docker-helm-build') {
                    script {
                        withDockerRegistry(credentialsId: 'ofek-Dockerhub'){
                        // Build Docker image
                            sh "docker build -t ${DOCKER_IMAGE}:${env.BUILD_NUMBER} ."
                        
                        // Push Docker image to Docker Hub
                            sh "docker push ${DOCKER_IMAGE}:${env.BUILD_NUMBER}"
                            sh "docker push ${DOCKER_IMAGE}:latest"
                        }
                        
                    }
                }
            }
        }

    


        //test test_app.py inside postgres container if branch is feature
        stage('test') {
            when {
                not {
                    branch 'main'
                }
            }
            steps{
                container('postgres') {
                    // Install python and pytest
                    sh 'apt-get update && apt-get install -y python3 python3-pip libpq-dev gcc'
                    sh 'pip3 install -r requirements.txt --break-system-packages'
                    sh 'pytest test_app.py'
                }
                    
            }
        }




        stage('merge request') {
            when {
                not {
                    branch 'main'
                }
            }
            steps{
                script {
                    withCredentials([usernamePassword(credentialsId: 'github-credentials', usernameVariable: 'GITHUB_USER', passwordVariable: 'GITHUB_TOKEN')]) {
                        sh """
                        curl -X POST -u ${GITHUB_USER}:${GITHUB_TOKEN} -d '{
                            "title": "Merge feature to main",
                            "head": "feature",
                            "base": "main"
                        }' https://api.github.com/repos/ofekbarel/Final-Project/pulls
                        """
                    }
                }
            }
        }
    }



    post {
        failure {
            emailext body: 'The build failed. Please check the build logs for details.',
                     subject: "Build failed: ${currentBuild.fullDisplayName}",
                     to: 'ofekbarel10@gmail.com'
        }
    }
}